package com.ckcclc.hadoop.secondarysort;import org.apache.hadoop.io.WritableComparable;import java.io.DataInput;import java.io.DataOutput;import java.io.IOException;/** * Created by ckcclc on 20/07/2017. */public class CompositeKey implements WritableComparable<CompositeKey> {    private String first;    private String second;    public CompositeKey(String first, String second) {        this.first = first;        this.second = second;    }    @Override    public int compareTo(CompositeKey other) {        return first.compareTo(other.getFirst()) == 0                ? second.compareTo(other.getSecond())                : first.compareTo(other.getFirst());    }    @Override    public void write(DataOutput dataOutput) throws IOException {        dataOutput.writeBytes(first);        dataOutput.writeBytes(second);    }    @Override    public void readFields(DataInput dataInput) throws IOException {        String[] strings = dataInput.readLine().split(" ");        this.first = strings[0];        this.second = strings[1];    }    public String getFirst() {        return first;    }    public void setFirst(String first) {        this.first = first;    }    public String getSecond() {        return second;    }    public void setSecond(String second) {        this.second = second;    }}